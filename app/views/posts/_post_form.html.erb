 <%= form_for(@post) do |f| %>
    <div class="form-group" >
    <%= render 'shared/error_messages', object: f.object%>

        <%= f.label :title, 'タイトル', class:'control-label' %>
        <%= f.text_area :title,  class: 'form-control' %>
        <%= f.label :tag, 'タグを追加するといろいろな人から見られやすくなります(例: 海,山など)', class:'control-label' %>
        <%= f.text_area :tag,  class: 'form-control' %>
        <%= f.label :content, '内容', class:'control-label' %>
        <%= f.text_area :content,  class: 'form-control', :size=>"60x10" %>
        <%= f.hidden_field :latitude, {value: @post.latitude, id: "hidden_latitude"} %>
        <%= f.hidden_field :longitude, {value: @post.longitude, id: "hidden_longitude"} %>
        <%= f.hidden_field :address, {value: @post.address, id: "hidden_address"} %>
        <span class="post_picture">
       <%= f.file_field :picture, accept: 'image/jpeg,image/gif,image/png'  %>
       </span>
    </div>
  <%= f.submit '投稿', class: "btn btn-primary form-control mt-4" %>
  <% end %>
  <h2>マップをクリックして投稿場所の位置情報を追加できます</h2>
  <div id="address"></div>
 <div id="map2"></div>
 <style>
#map2{
height: 500px;
width: 500px;
}

</style>

<script type="text/javascript">
    if (navigator.geolocation) {
        // 現在地を取得
       
          // 取得成功した場合
         navigator.geolocation.getCurrentPosition(
          function(position) {
            // 緯度・経度を変数に格納
            var initLatLng = new google.maps.LatLng(<%= @post.latitude %>,<%= @post.longitude %>);
            // マップオプションを変数に格納
            var mapOptions = {
              zoom : 14,          // 拡大倍率
              center : initLatLng  // 緯度・経度
            };
            // マップオブジェクト作成
            var map = new google.maps.Map(
              document.getElementById("map2"), // マップを表示する要素
              mapOptions         // マップオプション
            );
            //　マップにマーカーを表示する
            var marker = new google.maps.Marker({
              map : map,             // 対象の地図オブジェクト
              position : initLatLng   // 緯度・経度
            });
           
async function getAdrs(myLatlng){
var ll = myLatlng
var gc = new google.maps.Geocoder();

const promise= new Promise((resolve, reject) =>gc.geocode({ location : ll }, function(results, status){
if (status == google.maps.GeocoderStatus.OK) {
 var address = results[0].formatted_address+"付近" 
 
document.getElementById("address").innerHTML = address;
resolve(address)
}else{
alert(status+" : ジオコードに失敗しました");
}
})
);
var address= await promise
document.getElementById('hidden_address').setAttribute("value",address)
}

            map.addListener('click', function mylistener(event) {
              console.log("change")
             document.getElementById('hidden_latitude').setAttribute("value",event.latLng.lat())
             document.getElementById('hidden_longitude').setAttribute("value",event.latLng.lng())
             var myLatlng = new google.maps.LatLng(event.latLng.lat(),event.latLng.lng());
             marker.setPosition(myLatlng);
             getAdrs(myLatlng);
      });
          },
          // 取得失敗した場合
          function(error) {
            // エラーメッセージを表示
            switch(error.code) {
              case 1: // PERMISSION_DENIED
                alert("位置情報の利用が許可されていません");
                break;
              case 2: // POSITION_UNAVAILABLE
                alert("現在位置が取得できませんでした");
                break;
              case 3: // TIMEOUT
                alert("タイムアウトになりました");
                break;
              default:
                alert("その他のエラー(エラーコード:"+error.code+")");
                break;
            }
          }
      )
      // Geolocation APIに対応していない
      } else {
        alert("この端末では位置情報が取得できません");
      }  
      
    </script>
  
 
